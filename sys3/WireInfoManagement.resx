<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>169, 20</value>
  </data>
  <data name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>390, 20</value>
  </data>
  <data name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>511, 20</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcHBwelhXWJoAAABCAAAAAAAAAAAAAAAAAAAAAG1qbGbi4eHq/fz9/vn4+f3Fw8TcKyorhwAA
        AFAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACnp6f9vLq81gAAAEMAAAAAAAAAAAAAAACSjZBS8/Pz/ebl5vWPjY6ue3p7vqen
        p/7k4uPxGRcYfQAAACgAAAAAAAAAAAAAAACa2/YLjdDsV3GgtBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKenp/28urzWAAAAQw4ODggAAAAAAAAAAKWjpNL49/f6LSwsYzs6
        OwEAAAAAWldZd8jIyP+HhIa6AAAAQAAAAACS3Psrjdr7k4rZ+u+H2Pv/N0pSggQFBUUAAABRAAAAWQAA
        AFwAAABZAAAARwAAADMAAAAgAAAACgAAAAEAAAAAp6en/by6vNYAAABDAAAAAAAAAABjYGIKsLCw+sLA
        wdoAAABCAAAAAAAAAABfXV8QrKys/b28vdomOkOJf8Thw4jZ+/+H2fz/h9j7/4bY+v8kLTHUAAAAsAAA
        AKMAAACWBgYHjRghJZMkNz+bFyElgAAAAFgAAABMAAAAOQAAAACnp6f9vLq81gAAAEMAAAAAAAAAAGRh
        Yg6xsLD9ubi51QAAAEIAAAAAAAAAAHqapyasrKz9zNne/2SfuP+I2fr/iNn7/4jZ/P+I2fz/h9j6/zJG
        T+clOULdMU1Z50hzhvNiobz/aK/N/2uy0P9Mc4TVAAAAUwAAAEcAAAA7AAAAAKenp/28urzWAAAAQwAA
        AAAAAAAAZGFiDrGwsP25uLnVAwMDRl+SpkyN3Puzidf2/6ytrv/M2d7/ZKC4/4jZ+v+I2fv/iNn7/4jZ
        +/+H1/r/MFNk/zFVZv82XnD/SXyS/1+gu/9psM7/a7PR/22z0P9hnbf2Dg8PTwAAADYAAAAAp6en/by6
        vNYAAABDAAAAAAAAAABkYWIOsbCw/bm4udVXiJvgidr7/4nb+/+H1vb/rK2u/8zZ3v9loLj/idn6/4ja
        +/+J2vv/idr7/4fY+f8yV2j/M1lq/zhhdP9KfpX/YKG9/2qxz/9rtNL/a7TS/16fu/8WFxhTAAAAMAAA
        AACnp6f9vLq81gAAAEMAAAAAAAAAAGRhYg6xsLD9ubi51VyTqO2J2/v/itv8/4jW9v+sra7/zNne/2Wg
        uP+J2vv/idr7/4na+/+J2vv/h9j5/zRabP81XG7/OmR3/0yAl/9hor7/a7LQ/2y00v9stNL/X6C8/xUX
        F00AAAAqAAAAAKenp/28urzWAAAAQwAAAAAAAAAAZGFiDrGwsP25uLnVXZSo7Yrc+/+K3Pv/fsbj/7q7
        u//M2d7/V4qf/2+xy/+D0fD/idr7/4na+/+I2Pn/Nl5w/zdgc/88Znr/S3+W/1+gvP9qsc//bbXT/221
        0/9gor3/FRYXRwAAACMAAAAApqam/by7vNYAAABPAAAAAgAAAABkYWIOtrW1/bm4udVhmq/si938/4/N
        5f+6ztf/+/v7/+7y9P+zxMz/Z4yc/1qPpf+C0O//idv7/4ja+v85YnX/OmR3/zxne/9HeY//Wpex/2it
        y/9ttdP/bbbU/2Gjv/9CWWQhAwQEAQAAAACLiovz3Nrb6gMCA24AAAAxBAQEDkNBQkDm5ub+paOkxm+w
        yOiLzOX/6Ovt///////////////////////19vj/ao2d/2ysxv+J2vv/idr7/zxmev89aHz/PWh8/0Jx
        h/9SiqL/ZKfD/2210/9ut9X/YqXB/2uVpx8AAAAAAAAAAF9dXp/U1NT/oZ+hyC4tLodCQUKKz87O4vz8
        /P5UU1VrgMvk4JKtt//9/f3///////////////////////////++zNP/YZqx/4nZ+v+K2/z/P2yA/z9s
        gf8+an//QW+E/0+EnP9ho8D/bbXT/2+41v9kp8P/bJmsHwAAAAAAAAAAWldZE2dmZ87CwsL/8vLy//j4
        +P/p6en+o6CikmiAigSJ2fTfkaKo//39/f///////////////////////////9ri5v9hmrD/idv6/4rc
        /P9bl6//QXCF/0Bug/9Ccof/T4ae/2Kkwf9uttT/cLnX/2aqx/9tnLAfAAAAAAAAAAAAAAAAXFpbB19d
        XmVvbW6efn1+k4eFhkEAAAAAAAAAAIzf+9+Roqj//f39////////////////////////////2uLm/2Gb
        sP+K2/r/it38/4rd/P9Qhpz/Q3KI/0V2jP9SiaH/ZKbD/2+31f9xutj/ZqjE/26fsxcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjeH835GiqP/8/Pz//v7+//39/f/+/v7//f39//7+
        /v/b5Oj/aKa8/4vc+/+L3fz/i938/1OKof9Fd43/SHqQ/1OMpf9lqMX/cLjX/3O51t93sssfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACO4fzfd5ei/5KcoP/h5ef/n6Sm/+Hl
        5/+ip6j/3+Tm/4+ps/+J2vb/i977/4ze/P+L3f3/VY6l/0l7kf9KfpT/VpCp/2aqx/9xutj/aqvGvwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/i/N+O4v3/fqi2/6/B
        x/9lfIT/qcHL/3qSmv+iuMH/dLjP/4zf+/+M3/v/jN77/4ve+/9Xkaj/S3+W/02Cmf9Yk63/aK3K/3K7
        2v9pqMO/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjuP8347i
        /P95pLH/qcLK/3StwP+Ew9n/e5ij/6PCzf+Cz+j/jOD8/4zf+/+M3/v/i9/7/1mUrP9OhJv/UIae/1qW
        sP9pr8z/c73c/2qpxb8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACP4/3fjuP9/4XM4/+Dxdr/juL8/47i/P+CxNn/hszj/43g/P+N4Pz/jeD8/4zg/P+M3/v/W5iw/1CI
        of9SiqP/XJq0/2uxz/90vt7/bKzHvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI/j/d+P4/3/j+P9/47j/f+O4vz/juL8/47i/P+O4vz/juL8/43h/f+N4f3/jeD8/43g
        /P9dm7T/U4yl/1WOp/9enbj/bbPR/3XA4P9ursq/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAj+T934/k/f+P4/3/j+P9/4/j/f+O4/3/juP9/47i/P+O4vz/juL9/47h
        /f+N4f3/jOH9/1+et/9WkKn/V5Ks/2CgvP9utdP/dsHi/3CwzL8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACR5f3fkOT9/4/k/f+P5P7/j+T+/4/j/f+P4/3/juP9/47i
        /P+O4vz/juP9/47i/f+O4v3/YaG7/1iUrv9alrD/YqTA/3C41v94w+P/cbLPvwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHl/d+Q5f7/kOT9/5Dk/f+P5P3/j+T9/4/j
        /f+P4/3/j+P9/47j/f+O4vz/juL8/47i/P9jpb7/Wpmz/1ybtv9lqMT/crrZ/3nF5f9ytdG/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkeb+35Dl/v+Q5f3/kOX9/5Dk
        /f+Q5P3/j+T9/4/k/f+P5P7/j+P9/4/j/f+O4/3/juP9/2apxP9goL3/YqTB/2qwzf91v9//esfo/3S3
        078AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS5v7fkeb+/5Hm
        /v+Q5v7/kOX9/5Dl/f+Q5P3/kOT9/5Dk/f+P5P3/j+P9/4/j/f+O4/3/bLLN/2uwzv9utdP/dL3d/3nF
        5v98yer/dbnWvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHm
        /d+R5v7/keb+/5Hm//+R5v7/kOb+/5Dl/v+Q5f3/keX+/5Dk/f+Q5P3/j+T9/47k/v90vdn/eMPk/3rG
        5v97yer/fcvr/33L7P93u9i/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkef935Hn/f+R5v3/keb+/5Hl/v+R5v7/keb+/5Dm/v+Q5f3/kOX9/5Dk/f+Q5P3/j+P9/3rE
        4f9+ze7/fs3v/37N7v9+ze7/fczu/3i9278AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACS5/3fkef9/5Hn/f+R5/3/keb9/5Hm/v+R5v7/keb+/5Hm/v+T5v7/l+X8/5Pf
        +f+M1vP/gdDy/4HQ8v+Bz/H/gM/w/3/O7/9/zu//eb/dvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJLo/d+S5/3/kef9/5Hn/f+Q5v3/lOf8/5fl/P+U4Pv/kNz5/4rX
        9/+C0/b/gtP2/4LS9f+C0fX/gtH0/4HQ9P+B0PP/gc/x/4DP8P98wd+3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkuf935Xo/f+U4/n/kd74/4/b+P+K2Pn/hdb5/4XW
        +f+H1vn/i9j4/5Ha+P+N2fjflNv435Ha97+W2/e7lNr2n5nc95eY2/Z/mNnxc43L5C8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACa3fJ7i8/qi4fO63+L0vBzjtf2X5Ha
        +UuW3fo/mt76K57g+h+e4PkHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjwD//44A4/+GEIAAjDAAAIwwAACMAAAAjAAAAIwAAACMAAAAhAAAAIAA
        AAGAAAABgAAAAcGAAAH/gAAD/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+A
        AAf/gAAH/4AAB/+AAAf/gAAH/4Af//////8=
</value>
  </data>
</root>