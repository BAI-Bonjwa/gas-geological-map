<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>207, 55</value>
  </data>
  <data name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>312, 55</value>
  </data>
  <data name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>422, 55</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A///8AP///AD///wA///8AP///AD///wA/8=
</value>
  </data>
</root>